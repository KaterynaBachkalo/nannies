{"version":3,"file":"static/js/752.749dac26.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/NanniesList/NanniesList.module.css?c357","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","components/NanniesList/NanniesList.tsx","img/chevron-down.svg","webpack://my-app/./src/components/Filters/Filters.module.css?0811","components/Filters/Filters.tsx","pages/NanniesPage/NanniesPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back\":\"NanniesList_back__a4sqB\",\"container\":\"NanniesList_container__JHB-F\",\"list\":\"NanniesList_list__7+9b4\",\"btnWrap\":\"NanniesList_btnWrap__tzMPk\",\"btnLoadMore\":\"NanniesList_btnLoadMore__vYiJW\"};","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { FC, useEffect, useState } from \"react\";\nimport NanniesCard from \"../NanniesCard/NanniesCard\";\nimport { ref, onValue } from \"firebase/database\";\nimport { db } from \"../../firebase\";\nimport { INanny } from \"../../types\";\nimport css from \"./NanniesList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  selectCurrentPage,\n  selectFilter,\n  selectIsLoading,\n} from \"../../redux/selectors\";\nimport {\n  setCurrentPage,\n  setError,\n  setLoading,\n  setNannies,\n  setNextPage,\n} from \"../../redux/nanniesSlice\";\nimport Loader from \"../Loader/Loader\";\nimport { nanoid } from \"nanoid\";\n\nconst NanniesList: FC = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n\n  const [loadedNannies, setLoadedNannies] = useState<INanny[]>([]);\n  const [visibleNannies, setVisibleNannies] = useState<INanny[]>([]);\n\n  const nanniesPerPage = 3;\n  const currentPage = useSelector(selectCurrentPage);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      dispatch(setLoading(true));\n      dispatch(setError(null));\n\n      const unsubscribe = onValue(ref(db), (snapshot) => {\n        const data = snapshot.val();\n\n        if (data) {\n          dispatch(setNannies(data));\n          setLoadedNannies(data);\n        }\n      });\n      return () => unsubscribe();\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error));\n    }\n  }, [dispatch]);\n\n  const handleLoadMore = () => {\n    dispatch(setNextPage());\n    const startIndex = currentPage * nanniesPerPage;\n    const endIndex = startIndex + nanniesPerPage;\n    const newVisibleNannies = loadedNannies.slice(startIndex, endIndex);\n    setVisibleNannies([...visibleNannies, ...newVisibleNannies]);\n    setCurrentPage(currentPage);\n  };\n\n  useEffect(() => {\n    if (loadedNannies.length > 0) {\n      let filteredNannies = [...loadedNannies];\n\n      switch (filter) {\n        case \"A to Z\":\n          filteredNannies.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n        case \"Z to A\":\n          filteredNannies.sort((a, b) => b.name.localeCompare(a.name));\n          break;\n        case \"Less than 10$\":\n          filteredNannies = filteredNannies.filter(\n            (nanny) => nanny.price_per_hour < 10\n          );\n          break;\n        case \"Greater than 10$\":\n          filteredNannies = filteredNannies.filter(\n            (nanny) => nanny.price_per_hour > 10\n          );\n          break;\n        case \"Popular\":\n          filteredNannies.sort((a, b) => b.rating - a.rating);\n          break;\n        case \"Not popular\":\n          filteredNannies.sort((a, b) => a.rating - b.rating);\n          break;\n        case \"Show all\":\n        default:\n          break;\n      }\n\n      setVisibleNannies(filteredNannies.slice(0, nanniesPerPage));\n      // setVisibleNannies(filteredNannies);\n    }\n  }, [filter, loadedNannies]);\n\n  return (\n    <div className={css.back}>\n      <div className={css.container}>\n        <div className={css.list}>\n          {visibleNannies.length === 0 ? (\n            <p>No nannies found with the selected criteria</p>\n          ) : (\n            <div className={css.list}>\n              {visibleNannies.map((nanny: INanny) => (\n                <NanniesCard key={nanoid()} nanny={nanny} />\n              ))}\n            </div>\n          )}\n        </div>\n        {loadedNannies.length > visibleNannies.length &&\n          visibleNannies.length !== 0 && (\n            <div className={css.btnWrap}>\n              <button onClick={handleLoadMore} className={css.btnLoadMore}>\n                Load more\n              </button>\n            </div>\n          )}\n      </div>\n      {isLoading && !visibleNannies && <Loader />}\n    </div>\n  );\n};\n\nexport default NanniesList;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgChevronDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 7.5L10 12.5L15 7.5\",\n    stroke: \"#FBFBFB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron-down.4ccbc5dc7b972c8bbb1c70d9a162d0a8.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filters_container__6RvBO\",\"title\":\"Filters_title__FvnP7\",\"wrap\":\"Filters_wrap__3exMc\",\"btnInput\":\"Filters_btnInput__UOb1C\",\"dropdown\":\"Filters_dropdown__AjeDW\",\"list\":\"Filters_list__v78Sz\",\"item\":\"Filters_item__XBHem\"};","import { FC, useRef, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { ReactComponent as IconChevron } from \"../../img/chevron-down.svg\";\nimport css from \"./Filters.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"../../redux/filterSlice\";\nimport useCloseDropdown from \"../../services/closeDropdown\";\n\nconst Filters: FC = () => {\n  const defaultFilter = \"Show all\";\n\n  const options: string[] = [\n    \"A to Z\",\n    \"Z to A\",\n    \"Less than 10$\",\n    \"Greater than 10$\",\n    \"Popular\",\n    \"Not popular\",\n    \"Show all\",\n  ];\n\n  const [selectedFilter, setSelectedFilter] = useState(defaultFilter);\n\n  const [isOpenDropdown, setOpenDropdown] = useState(false);\n\n  const dropdownref = useRef<HTMLDivElement | null>(null);\n  const iconref = useRef<HTMLDivElement | null>(null);\n\n  const dispatch = useDispatch();\n\n  const handleSelect = (selectedFilter: string) => {\n    setSelectedFilter(selectedFilter);\n    dispatch(setFilter(selectedFilter));\n  };\n\n  const onClose = () => {\n    setOpenDropdown(false);\n  };\n\n  useCloseDropdown(onClose, dropdownref, iconref);\n\n  return (\n    <div className={css.container}>\n      <p className={css.title}>Filters</p>\n      <div className={css.wrap}>\n        <button\n          type=\"button\"\n          className={css.btnInput}\n          onClick={() => {\n            setOpenDropdown(!isOpenDropdown);\n          }}\n        >\n          {selectedFilter}\n          <IconChevron ref={iconref} />\n        </button>\n\n        {isOpenDropdown && (\n          <div className={css.dropdown} onClick={onClose} ref={dropdownref}>\n            <ul className={css.list}>\n              {options.map((opt) => (\n                <li\n                  key={nanoid()}\n                  className={css.item}\n                  onClick={() => handleSelect(opt)}\n                  defaultValue={defaultFilter}\n                >\n                  {opt}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n","import React from \"react\";\nimport NanniesList from \"../../components/NanniesList/NanniesList\";\nimport Filters from \"../../components/Filters/Filters\";\n\nconst NanniesPage = () => {\n  return (\n    <>\n      <Filters />\n      <NanniesList />\n    </>\n  );\n};\n\nexport default NanniesPage;\n"],"names":["nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","NanniesList","isLoading","useSelector","selectIsLoading","filter","selectFilter","loadedNannies","setLoadedNannies","useState","visibleNannies","setVisibleNannies","currentPage","selectCurrentPage","dispatch","useDispatch","useEffect","setLoading","setError","unsubscribe","onValue","ref","db","snapshot","data","val","setNannies","error","filteredNannies","sort","a","b","name","localeCompare","nanny","price_per_hour","rating","slice","_jsxs","className","css","children","_jsx","map","NanniesCard","onClick","handleLoadMore","setNextPage","startIndex","endIndex","newVisibleNannies","setCurrentPage","Loader","_path","_extends","Object","assign","bind","target","i","source","key","prototype","hasOwnProperty","call","apply","this","SvgChevronDown","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","Filters","defaultFilter","selectedFilter","setSelectedFilter","isOpenDropdown","setOpenDropdown","dropdownref","useRef","iconref","onClose","useCloseDropdown","type","IconChevron","opt","setFilter","handleSelect","defaultValue","NanniesPage","_Fragment"],"sourceRoot":""}