{"version":3,"file":"static/js/492.f32f0f7b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/NanniesList/NanniesList.module.css?c357","components/NanniesList/NanniesList.tsx","img/chevron-down.svg","webpack://my-app/./src/Filters/Filters.module.css?2215","Filters/Filters.tsx","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","pages/NanniesPage/NanniesPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back\":\"NanniesList_back__a4sqB\",\"container\":\"NanniesList_container__JHB-F\",\"list\":\"NanniesList_list__7+9b4\",\"btnWrap\":\"NanniesList_btnWrap__tzMPk\",\"btnLoadMore\":\"NanniesList_btnLoadMore__vYiJW\"};","import { FC, useEffect, useState } from \"react\";\nimport NanniesCard from \"../NanniesCard/NanniesCard\";\nimport { ref, onValue } from \"firebase/database\";\nimport { db } from \"../../firebase\";\nimport { INanny } from \"../../types\";\nimport css from \"./NanniesList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { selectCurrentPage, selectIsLoading } from \"../../redux/selectors\";\nimport {\n  setCurrentPage,\n  setError,\n  setLoading,\n  setNannies,\n  setNextPage,\n} from \"../../redux/nanniesSlice\";\nimport Loader from \"../Loader/Loader\";\n\nconst NanniesList: FC = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const [loadedNannies, setLoadedNannies] = useState<INanny[]>([]);\n  const [visibleNannies, setVisibleNannies] = useState<INanny[]>([]);\n\n  const nanniesPerPage = 3;\n  const currentPage = useSelector(selectCurrentPage);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      dispatch(setLoading(true));\n      dispatch(setError(null));\n\n      const unsubscribe = onValue(ref(db), (snapshot) => {\n        const data = snapshot.val();\n\n        if (data) {\n          dispatch(setNannies(data));\n          setLoadedNannies(data);\n          setVisibleNannies(data.slice(0, nanniesPerPage));\n        }\n      });\n      return () => unsubscribe();\n    } catch (error) {\n      dispatch(setLoading(false));\n      dispatch(setError(error));\n    }\n  }, [dispatch]);\n\n  const handleLoadMore = () => {\n    dispatch(setNextPage());\n    const startIndex = currentPage * nanniesPerPage;\n    const endIndex = startIndex + nanniesPerPage;\n    const newVisibleNannies = loadedNannies.slice(startIndex, endIndex);\n    setVisibleNannies([...visibleNannies, ...newVisibleNannies]);\n    setCurrentPage(currentPage);\n  };\n\n  return (\n    <div className={css.back}>\n      <div className={css.container}>\n        <div className={css.list}>\n          {visibleNannies?.map((nanny: INanny) => (\n            <NanniesCard key={nanny.name} nanny={nanny} />\n          ))}\n        </div>\n        {loadedNannies.length > visibleNannies.length && (\n          <div className={css.btnWrap}>\n            <button onClick={handleLoadMore} className={css.btnLoadMore}>\n              Load more\n            </button>\n          </div>\n        )}\n      </div>\n      {isLoading && !visibleNannies && <Loader />}\n    </div>\n  );\n};\n\nexport default NanniesList;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgChevronDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 7.5L10 12.5L15 7.5\",\n    stroke: \"#FBFBFB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron-down.4ccbc5dc7b972c8bbb1c70d9a162d0a8.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filters_container__o5P0U\",\"title\":\"Filters_title__5i1wB\",\"wrap\":\"Filters_wrap__kdJ+R\",\"btnInput\":\"Filters_btnInput__t1I+o\",\"dropdown\":\"Filters_dropdown__r19FI\",\"list\":\"Filters_list__f6hhW\",\"item\":\"Filters_item__8Bqg3\"};","import { FC, useRef, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { ReactComponent as IconChevron } from \"../img/chevron-down.svg\";\nimport css from \"./Filters.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"../redux/filterSlice\";\nimport useCloseModals from \"../services/closeModals\";\n\nconst Filters: FC = () => {\n  const defaultFilter = \"Show all\";\n\n  const options: string[] = [\n    \"A to Z\",\n    \"Z to A\",\n    \"Less than 10$\",\n    \"Greater than 10$\",\n    \"Popular\",\n    \"Not popular\",\n    \"Show all\",\n  ];\n\n  const [selectedFilter, setSelectedFilter] = useState(defaultFilter);\n\n  const [isOpenDropdown, setOpenDropdown] = useState(false);\n\n  const dropdownref = useRef<HTMLDivElement>(null);\n\n  const dispatch = useDispatch();\n\n  const handleClick = (selectedFilter: string) => {\n    setSelectedFilter(selectedFilter);\n    dispatch(setFilter(selectedFilter));\n  };\n\n  const onClose = () => {\n    setOpenDropdown(false);\n  };\n\n  useCloseModals(onClose, dropdownref);\n\n  return (\n    <div className={css.container}>\n      <p className={css.title}>Filters</p>\n      <div className={css.wrap}>\n        <button\n          type=\"button\"\n          className={css.btnInput}\n          onClick={() => setOpenDropdown(!isOpenDropdown)}\n        >\n          {selectedFilter}\n          <IconChevron />\n        </button>\n\n        {isOpenDropdown && (\n          <div className={css.dropdown} ref={dropdownref} onClick={onClose}>\n            <ul className={css.list}>\n              {options.map((opt) => (\n                <li\n                  key={nanoid()}\n                  className={css.item}\n                  onClick={() => handleClick(opt)}\n                  defaultValue={defaultFilter}\n                >\n                  {opt}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import React from \"react\";\nimport NanniesList from \"../../components/NanniesList/NanniesList\";\nimport Filters from \"../../Filters/Filters\";\n\nconst NanniesPage = () => {\n  return (\n    <>\n      <Filters />\n      <NanniesList />\n    </>\n  );\n};\n\nexport default NanniesPage;\n"],"names":["NanniesList","isLoading","useSelector","selectIsLoading","loadedNannies","setLoadedNannies","useState","visibleNannies","setVisibleNannies","currentPage","selectCurrentPage","dispatch","useDispatch","useEffect","setLoading","setError","unsubscribe","onValue","ref","db","snapshot","data","val","setNannies","slice","error","_jsxs","className","css","children","_jsx","map","nanny","NanniesCard","name","length","onClick","handleLoadMore","setNextPage","startIndex","endIndex","newVisibleNannies","setCurrentPage","Loader","_path","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgChevronDown","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","Filters","defaultFilter","selectedFilter","setSelectedFilter","isOpenDropdown","setOpenDropdown","dropdownref","useRef","onClose","useCloseModals","type","IconChevron","opt","setFilter","handleClick","defaultValue","size","undefined","bytes","crypto","getRandomValues","Uint8Array","nanoid","NanniesPage","_Fragment"],"sourceRoot":""}